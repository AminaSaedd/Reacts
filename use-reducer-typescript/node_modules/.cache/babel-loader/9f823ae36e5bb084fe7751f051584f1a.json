{"ast":null,"code":"var _jsxFileName = \"/Users/aminamohamed/Desktop/login-with-typescript/use-reducer-typescript/src/components/LoginUseReducer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { login } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  error: {\n    backgroundColor: \"brown\",\n    color: \"#fff\"\n  }\n}));\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false,\n  variant: 'login'\n};\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case 'field':\n      {\n        return { ...state,\n          [action.fieldName]: action.payload\n        };\n      }\n\n    case 'login':\n      {\n        return { ...state,\n          error: '',\n          isLoading: true\n        };\n      }\n\n    case 'success':\n      {\n        return { ...state,\n          isLoggedIn: true,\n          isLoading: false\n        };\n      }\n\n    case 'error':\n      {\n        return { ...state,\n          error: 'Incorrect username or password!',\n          isLoggedIn: false,\n          isLoading: false,\n          username: '',\n          password: ''\n        };\n      }\n\n    case 'logOut':\n      {\n        return { ...state,\n          isLoggedIn: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst LoginUseReducer = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(loginReducer, initialState);\n  const {\n    username,\n    password,\n    isLoading,\n    error,\n    isLoggedIn\n  } = state;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: 'login'\n    });\n\n    try {\n      await login({\n        username,\n        password\n      });\n      dispatch({\n        type: 'success'\n      });\n    } catch (error) {\n      dispatch({\n        type: 'error'\n      });\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: [\"Welcome \", username, \"!\", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => dispatch({\n            type: 'logOut'\n          }),\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: onSubmit,\n        children: [error && /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Please Login!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"username username\",\n          name: \"username\",\n          autoComplete: \"username\",\n          autoFocus: true,\n          value: username,\n          onChange: e => dispatch({\n            type: 'field',\n            fieldName: 'username',\n            payload: e.currentTarget.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          value: password,\n          onChange: e => dispatch({\n            type: 'field',\n            fieldName: 'password',\n            payload: e.currentTarget.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          disabled: isLoading,\n          children: isLoading ? 'Logging in...' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginUseReducer, \"EOzNvEzWXhf3+nnU3NCwpiQGgaU=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginUseReducer;\nexport default LoginUseReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginUseReducer\");","map":{"version":3,"sources":["/Users/aminamohamed/Desktop/login-with-typescript/use-reducer-typescript/src/components/LoginUseReducer.tsx"],"names":["React","useReducer","Avatar","Button","CssBaseline","TextField","LockOutlinedIcon","Typography","makeStyles","Container","login","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","error","color","initialState","username","password","isLoading","isLoggedIn","variant","loginReducer","state","action","type","fieldName","payload","LoginUseReducer","dispatch","onSubmit","e","preventDefault","classes","currentTarget","value"],"mappings":"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","sourcesContent":["import React,{useReducer} from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { login } from './utils';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    error:{\n        backgroundColor:\"brown\",\n        color:\"#fff\",\n        \n    }\n  }));\n\n\nconst initialState: LoginState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false,\n  variant: 'login',\n};\n\ninterface LoginState {\n  username: string;\n  password: string;\n  isLoading: boolean;\n  error: string;\n  isLoggedIn: boolean;\n  variant: 'login' | 'forgetPassword';\n}\n\ntype LoginAction =\n  | { type: 'login' | 'success' | 'error' | 'logOut' }\n  | { type: 'field'; fieldName: string; payload: string };\n\nfunction loginReducer(state: LoginState, action: LoginAction) {\n  switch (action.type) {\n    case 'field': {\n      return {\n        ...state,\n        [action.fieldName]: action.payload,\n      };\n    }\n    case 'login': {\n      return {\n        ...state,\n        error: '',\n        isLoading: true,\n      };\n    }\n    case 'success': {\n      return {\n        ...state,\n        isLoggedIn: true,\n        isLoading: false,\n      };\n    }\n    case 'error': {\n      return {\n        ...state,\n        error: 'Incorrect username or password!',\n        isLoggedIn: false,\n        isLoading: false,\n        username: '',\n        password: '',\n      };\n    }\n    case 'logOut': {\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n\nconst LoginUseReducer = () => {\n\n\n    const [state, dispatch] = useReducer(loginReducer, initialState);\n  const { username, password, isLoading, error, isLoggedIn } = state;\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch({ type: 'login' });\n\n    try {\n      await login({ username, password });\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        {isLoggedIn ? (\n        <Typography component=\"h1\" variant=\"h5\">\n        Welcome {username}!\n            <Button onClick={() => dispatch({ type: 'logOut' })}>\n              Log Out\n            </Button>\n        </Typography>\n        ) : (\n        <form className={classes.form}  onSubmit={onSubmit}>\n\n{error && <Typography className={classes.error}>{error}</Typography>}\n            <Typography>Please Login!</Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"username username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={username}\n              onChange={(e) =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'username',\n                  payload: e.currentTarget.value,\n                })\n              }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n              onChange={(e) =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'password',\n                  payload: e.currentTarget.value,\n                })\n              }\n          />\n         \n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={isLoading}\n          >\n           {isLoading ? 'Logging in...' : 'Log In'}\n          </Button>\n        </form>\n       )}\n      </div>\n     \n    </Container>\n    )\n}\n\nexport  default LoginUseReducer;"]},"metadata":{},"sourceType":"module"}